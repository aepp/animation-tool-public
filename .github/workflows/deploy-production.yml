name: Deploy to production

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  install:
    environment: production
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout master branch
        uses: actions/checkout@v2

      - name: Install dependencies
        run: yarn install
        shell: bash

      - name: Pack (.tar) node_modules
        run: tar -zcvf node_modules.tar.gz node_modules
        shell: bash

      - name: Upload build artifact for the next job
        uses: actions/upload-artifact@v2
        with:
          name: animation-tool-node-modules-tar
          path: node_modules.tar.gz

  build:
    needs: 'install'
    env:
      DISABLE_ESLINT_PLUGIN: true
      ESLINT_NO_DEV_ERRORS: true

    environment: production
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout master branch
        uses: actions/checkout@v2

      - uses: actions/download-artifact@master
        with:
          name: animation-tool-node-modules-tar

      - name: Unpack node_modules
        run: tar -xvzf node_modules.tar.gz
        shell: bash

      - name: Build application
        run: yarn build
        shell: bash

      - name: Pack (.tar) build
        run: tar -zcvf build.tar.gz build
        shell: bash

      - name: Upload build artifact for the next job
        uses: actions/upload-artifact@v2
        with:
          name: animation-tool-release-tar
          path: build.tar.gz

  generate-doc:
    needs: 'install'
    environment: production
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout master branch
        uses: actions/checkout@v2

      - uses: actions/download-artifact@master
        with:
          name: animation-tool-node-modules-tar

      - name: Unpack node_modules
        run: tar -xvzf node_modules.tar.gz
        shell: bash

      - name: Generate jsdoc
        run: yarn generate-docs
        shell: bash

      - name: Pack (.tar) generated jsdoc
        run: tar -zcvf out.tar.gz out
        shell: bash

      - name: Upload build artifact for the next job
        uses: actions/upload-artifact@v2
        with:
          name: animation-tool-jsdoc-tar
          path: out.tar.gz

  deploy:
    needs:
      - 'build'
      - 'generate-doc'
    environment: production
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout master branch
        uses: actions/checkout@v2

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
          key: ${{ secrets.DEPLOY_SSH_KEY }}

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.DEPLOY_SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Download release artifact
        uses: actions/download-artifact@master
        with:
          name: animation-tool-release-tar

      - name: Download jsdoc artifact
        uses: actions/download-artifact@master
        with:
          name: animation-tool-jsdoc-tar

      - name: Display structure of workspace
        run: ls -alh
        working-directory: .

      - name: Unpack build archive
        run: tar -xvzf build.tar.gz
        shell: bash

      - name: Unpack jsdoc archive
        run: tar -xvzf out.tar.gz
        shell: bash

      - name: Run deploy helper script
        run: |
          chmod +x ./tasks/bash/deploy_helper_production.sh
          ./tasks/bash/deploy_helper_production.sh
        shell: bash
